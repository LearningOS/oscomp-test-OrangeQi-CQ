var searchIndex = new Map(JSON.parse('[["starry",{"t":"CHCQCCTTTTTTTTTTTTTTTTTTTFPPPPPPFGFPTTTTTFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOJHHHJCHCCCCCCCCPPPFFTPGPPPPPNNNNNNONNNNNNNOOOOONNNNNNNNNNNONHHHHHHHNNNNNNNNNNNNNHHHHHHHHFFFOONNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHNNNNNNNOONNNCCSHTTTTTTFFTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNCCHHGPPPPPPNNNNNNHHHHHHHHHNNNNNCCFNNNONNNOOOHONNNOHHHFFJJONNNNONONNHNNNNNOONNNONOOHNNNNHOHNHNHNNNNNNNOHH","n":["ctypes","main","mm","syscall_body","syscall_imp","task","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWTIME","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CloneFlags","Exited","NONE","NotExist","PROF","REAL","Running","TimeStat","TimerType","Tms","VIRTUAL","WALL","WCLONE","WCONTINUED","WIMTRACED","WNOHANG","WaitFlags","WaitStatus","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","borrow_mut","","","","","","clone","","","clone_into","","","clone_to_uninit","","","complement","","contains","","default","difference","","empty","","eq","","extend","","fmt","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","insert","","intersection","","intersects","","into","","","","","","into_iter","","is_all","","is_empty","","iter","","iter_names","","kernel_timestamp","new","not","","output","remove","","reset","set","","set_timer","stime_ns","sub","","sub_assign","","switch_from_old_task","switch_into_kernel_mode","switch_into_user_mode","switch_to_new_task","symmetric_difference","","timer_interval_ns","timer_remained_ns","timer_type","tms_cstime","tms_cutime","tms_stime","tms_utime","to_owned","","","toggle","","try_from","","","","","","","try_into","","","","","","type_id","","","","","","union","","update_timer","user_timestamp","utime_ns","_LINKME_ELEMENT_handle_page_fault","handle_page_fault","load_user_app","map_elf","_LINKME_ELEMENT_handle_syscall","fs","handle_syscall","mm","task","utils","ctl","fd_ops","io","pipe","stat","Blk","Chr","Dir","DirBuffer","DirEnt","FIXED_SIZE","Fifo","FileType","Lnk","Reg","Socket","Unknown","Wht","borrow","","","borrow_mut","","","buf","can_fit_entry","clone","","clone_into","","clone_to_uninit","","d_ino","d_name","d_off","d_reclen","d_type","fmt","","from","","","","into","","","new","","offset","remaining_space","sys_chdir","sys_getcwd","sys_getdents64","sys_ioctl","sys_linkat","sys_mkdirat","sys_unlinkat","to_owned","","try_from","","","try_into","","","type_id","","","write_entry","write_name","sys_close","sys_dup","sys_dup3","sys_openat","sys_read","sys_write","sys_writev","sys_pipe2","FsStatxTimestamp","Kstat","StatX","_pad0","_pad1","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","default","","","fmt","","","from","","","","into","","","st_atime_nsec","st_atime_sec","st_blksize","st_blocks","st_ctime_nsec","st_ctime_sec","st_dev","st_gid","st_ino","st_mode","st_mtime_nsec","st_mtime_sec","st_nlink","st_rdev","st_size","st_uid","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sys_fstat","sys_statx","to_owned","try_from","","","try_into","","","tv_nsec","tv_sec","type_id","","","brk","mmap","MAX_HEAP_SIZE","sys_brk","MAP_ANONYMOUS","MAP_FIXED","MAP_NORESERVE","MAP_PRIVATE","MAP_SHARED","MAP_STACK","MmapFlags","MmapProt","PROT_EXEC","PROT_READ","PROT_WRITE","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","borrow_mut","","complement","","contains","","difference","","empty","","extend","","fmt","","","","","","","","","","from","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","insert","","intersection","","intersects","","into","","into_iter","","is_all","","is_empty","","iter","","iter_names","","not","","remove","","set","","sub","","sub_assign","","symmetric_difference","","sys_mmap","sys_munmap","toggle","","try_from","","try_into","","type_id","","union","","schedule","thread","sys_nanosleep","sys_sched_yield","ArchPrctlCode","GetCpuid","GetFs","GetGs","SetCpuid","SetFs","SetGs","borrow","borrow_mut","eq","fmt","from","into","sys_arch_prctl","sys_clone","sys_execve","sys_exit","sys_exit_group","sys_getpid","sys_getppid","sys_set_tid_address","sys_wait4","try_from","","try_from_primitive","try_into","type_id","system_info","time","UtsName","borrow","borrow_mut","default","domainname","from","from_str","into","machine","nodename","release","sys_uname","sysname","try_from","try_into","type_id","version","sys_clock_gettime","sys_get_time_of_day","sys_times","AxNamespaceImpl","TaskExt","__AX_TASK_EXT_ALIGN","__AX_TASK_EXT_SIZE","aspace","borrow","","borrow_mut","","children","clear_child_tid","","clone_task","current_namespace_base","exec","from","","get_heap_bottom","get_heap_top","get_parent","heap_bottom","heap_top","into","","new","ns","ns_init_new","parent_id","proc_id","read_trapframe_from_kstack","set_clear_child_tid","set_heap_bottom","set_heap_top","set_parent","spawn_user_task","time","time_stat_from_kernel_to_user","","time_stat_from_user_to_kernel","","time_stat_output","","try_from","","try_into","","type_id","","uctx","wait_pid","write_trapframe_to_kstack"],"q":[[0,"starry"],[6,"starry::ctypes"],[205,"starry::mm"],[209,"starry::syscall_imp"],[215,"starry::syscall_imp::fs"],[220,"starry::syscall_imp::fs::ctl"],[285,"starry::syscall_imp::fs::fd_ops"],[288,"starry::syscall_imp::fs::io"],[292,"starry::syscall_imp::fs::pipe"],[293,"starry::syscall_imp::fs::stat"],[372,"starry::syscall_imp::mm"],[374,"starry::syscall_imp::mm::brk"],[376,"starry::syscall_imp::mm::mmap"],[485,"starry::syscall_imp::task"],[487,"starry::syscall_imp::task::schedule"],[489,"starry::syscall_imp::task::thread"],[516,"starry::syscall_imp::utils"],[518,"starry::syscall_imp::utils::system_info"],[535,"starry::syscall_imp::utils::time"],[538,"starry::task"],[589,"core::iter::traits::collect"],[590,"core::fmt"],[591,"core::option"],[592,"bitflags::iter"],[593,"core::result"],[594,"core::any"],[595,"memory_addr::addr"],[596,"page_table_entry"],[597,"alloc::string"],[598,"alloc::collections::vec_deque"],[599,"axmm::aspace"],[600,"axerrno"],[601,"kernel_elf_parser::info"],[602,"kernel_elf_parser::auxv"],[603,"axhal::arch::x86_64::context"],[604,"axfs::api::file"],[605,"core::ffi"],[606,"arceos_posix_api::ctypes"],[607,"num_enum"],[608,"alloc::sync"],[609,"axsync::mutex"],[610,"core::sync::atomic"],[611,"axns"],[612,"axtask::api"],[613,"core::cell"]],"i":"``````d000000000000000000`nA`1001```0f0000``303030303033003030BlAf5243105243543543543525205252435255555222243105243352552252525252525210524352525252520052052052005252000052000111154352105243310524310524352000```````````````E`00``Dn1`11111Dl1201200121212111111201220120100```````1201201201201```````````Ff00FhFj210222210210221021022222222222222220000000000000000000000``221021011210````G`00000``Fn0001010101010011010101010101010101000001111101010011010101010101010101010101010101010101``0101010101`````Gd00000000000`````````00000```Gj000000000`00000```````Gn0Hn1011110`10111111011111`1111`1`1`1`11010101``","f":"`{{}b}`````````````````````````````````````````{{}d}{{}f}{{dd}d}{{ff}f}{{{j{hd}}d}b}{{{j{hf}}f}b}3210{{{j{d}}}l}0{{{j{f}}}l}05432{j{{j{c}}}{}}00000{{{j{h}}}{{j{hc}}}{}}00000{{{j{d}}}d}{{{j{n}}}n}{{{j{A`}}}A`}{{j{j{hc}}}b{}}00{{jAb}b}00{dd}{ff}{{{j{d}}d}Ad}{{{j{f}}f}Ad}{{}Af}{{dd}d}{{ff}f}{{}d}{{}f}{{{j{n}}{j{n}}}Ad}{{{j{A`}}{j{A`}}}Ad}{{{j{hd}}c}b{{Aj{}{{Ah{d}}}}}}{{{j{hf}}c}b{{Aj{}{{Ah{f}}}}}}{{{j{d}}{j{hAl}}}An}0000{{{j{f}}{j{hAl}}}An}000{{{j{n}}{j{hAl}}}An}{{{j{A`}}{j{hAl}}}An}{cc{}}0000{B`A`}1{l{{Bb{d}}}}{l{{Bb{f}}}}{ld}0{lf}010{cd{{Aj{}{{Ah{d}}}}}}{cf{{Aj{}{{Ah{f}}}}}}{{{j{Bd}}}{{Bb{d}}}}{{{j{Bd}}}{{Bb{f}}}}{{{j{hd}}d}b}{{{j{hf}}f}b}{{dd}d}{{ff}f}{{{j{d}}d}Ad}{{{j{f}}f}Ad}{{}c{}}00000{dc{}}{fc{}}{{{j{d}}}Ad}{{{j{f}}}Ad}10{{{j{d}}}{{Bf{d}}}}{{{j{f}}}{{Bf{f}}}}{{{j{d}}}{{Bh{d}}}}{{{j{f}}}{{Bh{f}}}}{AfB`}{{}Af}{dd}{ff}{{{j{Af}}}{{Bj{B`B`}}}}{{{j{hd}}d}b}{{{j{hf}}f}b}{{{j{hAf}}B`}b}{{{j{hd}}dAd}b}{{{j{hf}}fAd}b}{{{j{hAf}}B`B`B`}Ad}:{{dd}d}{{ff}f}76555510<<{AfA`}{BlB`}000{jc{}}00:9{c{{Bn{e}}}{}{}}00000{C`{{Bn{A`C`}}}}{{}{{Bn{c}}}{}}00000{jCb}0000087<{AfB`}0{{}Cd}{{CfChAd}Ad}{{{j{h{Cl{Cj}}}}{j{hCn}}}{{D`{{Bj{CfCf}}}}}}{{{j{h{Cl{Cj}}}}{j{Db}}{j{hCn}}}{{D`{{Bj{Cf{Df{Dd}}}}}}}}3`{{{j{Dh}}B`}Dj}`````````````````````{j{{j{c}}}{}}00{{{j{h}}}{{j{hc}}}{}}00{Dlj}{{{j{Dl}}B`}Ad}{{{j{Dn}}}Dn}{{{j{E`}}}E`}{{j{j{hc}}}b{}}0{{jAb}b}0{DnEb}{DnDf}{DnEd}{DnEf}{DnAb}{{{j{Dn}}{j{hAl}}}An}{{{j{E`}}{j{hAl}}}An}{cc{}}0{EhE`}1{{}c{}}00{{{j{h{Ej{Ab}}}}}Dl}{{EbEdB`E`}Dn}{DlB`}{{{j{Dl}}}B`}{ElEn}{{ElB`}El}{{C`F`B`}Dj}{{C`B`F`}C`}{{C`AbC`AbC`}C`}{{C`Ell}En}{{DjAbB`}Dj}{jc{}}0{c{{Bn{e}}}{}{}}00{{}{{Bn{c}}}{}}00{jCb}00{{{j{hDl}}Dn{j{{Ej{Ab}}}}}{{Bn{bb}}}}{{{j{hDn}}{j{{Ej{Ab}}}}}b}{EnEn}0{{EnEn}En}{{C`ElC`Fb}Dj}=={{C`FdC`}Dj}{C`En}```{FfEb}{Ffl}{j{{j{c}}}{}}00{{{j{h}}}{{j{hc}}}{}}00{{{j{Ff}}}Ff}{{j{j{hc}}}b{}}{{jAb}b}{{}Ff}{{}Fh}{{}Fj}{{{j{Ff}}{j{hAl}}}An}{{{j{Fh}}{j{hAl}}}An}{{{j{Fj}}{j{hAl}}}An}{FlFf}{cc{}}00{{}c{}}00{FfDj}0?{FfEb}110{Ffl}10220110{FjFh}{FjEb}0{Fjl}12200000101{FjEf}311121{{C`F`}C`}{{C`AbllF`}C`}{jc{}}{c{{Bn{e}}}{}{}}00{{}{{Bn{c}}}{}}00{Fhl}{FhEd}{jCb}00``{{}B`}{B`Dj}```````````{{}Fn}{{}G`}{{FnFn}Fn}{{G`G`}G`}{{{j{hFn}}Fn}b}{{{j{hG`}}G`}b}3210{{{j{Fn}}}C`}0{{{j{G`}}}C`}05432{j{{j{c}}}{}}0{{{j{h}}}{{j{hc}}}{}}0{FnFn}{G`G`}{{{j{Fn}}Fn}Ad}{{{j{G`}}G`}Ad};:=<{{{j{hFn}}c}b{{Aj{}{{Ah{Fn}}}}}}{{{j{hG`}}c}b{{Aj{}{{Ah{G`}}}}}}{{{j{Fn}}{j{hAl}}}An}0000{{{j{G`}}{j{hAl}}}An}0000{cc{}}0{C`{{Bb{Fn}}}}{C`{{Bb{G`}}}}{C`Fn}0{C`G`}010{cFn{{Aj{}{{Ah{Fn}}}}}}{cG`{{Aj{}{{Ah{G`}}}}}}{{{j{Bd}}}{{Bb{Fn}}}}{{{j{Bd}}}{{Bb{G`}}}}{{{j{hFn}}Fn}b}{{{j{hG`}}G`}b}{{FnFn}Fn}{{G`G`}G`}{{{j{Fn}}Fn}Ad}{{{j{G`}}G`}Ad}{{}c{}}0{Fnc{}}{G`c{}}{{{j{Fn}}}Ad}{{{j{G`}}}Ad}10{{{j{Fn}}}{{Bf{Fn}}}}{{{j{G`}}}{{Bf{G`}}}}{{{j{Fn}}}{{Bh{Fn}}}}{{{j{G`}}}{{Bh{G`}}}}{FnFn}{G`G`}{{{j{hFn}}Fn}b}{{{j{hG`}}G`}b}{{{j{hFn}}FnAd}b}{{{j{hG`}}G`Ad}b}{{FnFn}Fn}{{G`G`}G`}5410{{B`B`C`C`C`Dj}B`}{{B`B`}C`}76{c{{Bn{e}}}{}{}}0{{}{{Bn{c}}}{}}0{jCb}065``{{GbGb}C`}{{}C`}```````{j{{j{c}}}{}}{{{j{h}}}{{j{hc}}}{}}{{{j{Gd}}{j{Gd}}}Ad}{{{j{Gd}}{j{hAl}}}An}{cc{}}{{}c{}}{{C`Eb}Dj}{{B`B`B`B`B`}Dj}{{ElB`B`}Dj}{C`Gf}0::{C`Dj}{{C`C`l}Dj}{c{{Bn{e}}}{}{}}{C`{{Bn{Gd{Gh{Gd}}}}}}{c{{Bn{Gd{Gh{Gd}}}}}{}}{{}{{Bn{c}}}{}}{jCb}```{j{{j{c}}}{}}{{{j{h}}}{{j{hc}}}{}}{{}Gj}{GjDf}{cc{}}{{{j{Bd}}}{{Df{Ab}}}}{{}c{}}333{GjEd}4<984{{C`Gb}C`}{GlEn}{BlDj}``{{}B`}0{GnH`}<<;;{GnHb}{{{j{Gn}}}Eb}{GnHd}{{{j{Gn}}B`{Bb{B`}}B`B`B`}{{D`{Eb}}}}{{}Ab}{{{j{Bd}}}{{D`{b}}}}>>44433<<{{B`Hf{H`{{Hb{Cn}}}}Eb}Gn}{GnHh}{{{j{Gn}}}b}6{GnB`}{B`Dh}{{{j{Gn}}Eb}b}000{{{H`{{Hb{Cn}}}}HfEb}Hj}{GnHl}{{}b}{{{j{Gn}}B`}b}10{{}{{Bj{B`B`B`B`}}}}{{{j{Gn}}}{{Bj{B`B`}}}}{c{{Bn{e}}}{}{}}0{{}{{Bn{c}}}{}}0{jCb}0{GnHf}{{C`C`}{{Bn{Ebn}}}}{{B`{j{Dh}}}b}","D":"BDd","p":[[1,"unit"],[5,"CloneFlags",6],[5,"WaitFlags",6],[0,"mut"],[1,"reference",null,null,1],[1,"u32"],[6,"WaitStatus",6],[6,"TimerType",6],[1,"u8"],[1,"bool"],[5,"TimeStat",6],[17,"Item"],[10,"IntoIterator",589],[5,"Formatter",590],[8,"Result",590],[1,"usize"],[6,"Option",591,null,1],[1,"str"],[5,"Iter",592],[5,"IterNames",592],[1,"tuple",null,null,1],[5,"Tms",6],[6,"Result",593,null,1],[1,"i32"],[5,"TypeId",594],[1,"fn"],[5,"VirtAddr",595],[5,"MappingFlags",596],[5,"String",597],[5,"VecDeque",598],[5,"AddrSpace",599],[8,"AxResult",600],[5,"ELFParser",601],[5,"AuxvEntry",602],[1,"array"],[5,"TrapFrame",603],[1,"isize"],[5,"DirBuffer",220],[5,"DirEnt",220],[6,"FileType",220],[1,"u64"],[1,"i64"],[1,"u16"],[8,"FileType",604],[1,"slice"],[8,"c_char",605],[8,"c_int",605],[6,"c_void",605],[8,"mode_t",606],[5,"iovec",606],[5,"Kstat",293],[5,"FsStatxTimestamp",293],[5,"StatX",293],[5,"stat",606],[5,"MmapProt",376],[5,"MmapFlags",376],[5,"timespec",606],[6,"ArchPrctlCode",489],[1,"never"],[5,"TryFromPrimitiveError",607],[5,"UtsName",518],[5,"timeval",606],[5,"TaskExt",538],[5,"Arc",608,null,1],[5,"Mutex",609],[5,"AtomicU64",610],[5,"UspaceContext",603],[5,"AxNamespace",611],[8,"AxTaskRef",612],[5,"UnsafeCell",613],[5,"AxNamespaceImpl",538]],"r":[],"b":[[53,"impl-Flags-for-CloneFlags"],[54,"impl-CloneFlags"],[55,"impl-WaitFlags"],[56,"impl-Flags-for-WaitFlags"],[95,"impl-Debug-for-CloneFlags"],[96,"impl-UpperHex-for-CloneFlags"],[97,"impl-LowerHex-for-CloneFlags"],[98,"impl-Octal-for-CloneFlags"],[99,"impl-Binary-for-CloneFlags"],[100,"impl-Binary-for-WaitFlags"],[101,"impl-Octal-for-WaitFlags"],[102,"impl-LowerHex-for-WaitFlags"],[103,"impl-UpperHex-for-WaitFlags"],[115,"impl-Flags-for-CloneFlags"],[116,"impl-CloneFlags"],[117,"impl-Flags-for-WaitFlags"],[118,"impl-WaitFlags"],[397,"impl-MmapProt"],[398,"impl-Flags-for-MmapProt"],[399,"impl-MmapFlags"],[400,"impl-Flags-for-MmapFlags"],[419,"impl-UpperHex-for-MmapProt"],[420,"impl-LowerHex-for-MmapProt"],[421,"impl-Octal-for-MmapProt"],[422,"impl-Binary-for-MmapProt"],[423,"impl-Debug-for-MmapProt"],[424,"impl-LowerHex-for-MmapFlags"],[425,"impl-UpperHex-for-MmapFlags"],[426,"impl-Debug-for-MmapFlags"],[427,"impl-Binary-for-MmapFlags"],[428,"impl-Octal-for-MmapFlags"],[433,"impl-MmapProt"],[434,"impl-Flags-for-MmapProt"],[435,"impl-Flags-for-MmapFlags"],[436,"impl-MmapFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACsBOAACAAEABQABACEAAgAqAAAANgAAADkAAAA+ABQAVwAAAFwAAQBgAAoAcAAAAHQAAAB2AAAAigABAJQAAQCYAAAAmwAAAJ4AAQCkAAMAqgACALEAAgC2ABIAywAEANIALAABAQAABgEGAA8BAAARARYAKwEPAGcBEQCPAQAAkQEAAJYBAwCkAQkAswEBAMQBAQDaAQEA3gEFAOYBAwDxAQMA9wEGAP8BCwANAgAAEgIAABQCAgAYAgMAHQIBACACAwAlAgAAJwICACwCAgAzAgAANQIAADgCBQA/AgsATAIBAA==","P":[[61,"T"],[73,""],[76,"T"],[79,""],[93,"T"],[95,""],[106,"T"],[111,""],[112,"T"],[113,""],[121,"T"],[123,""],[131,"U"],[137,"IntoIterator::IntoIter"],[139,""],[176,"T"],[179,""],[181,"U,T"],[187,""],[188,"U"],[194,""],[233,"T"],[239,""],[243,"T"],[245,""],[254,"T"],[256,""],[257,"T"],[258,"U"],[261,""],[272,"T"],[274,"U,T"],[277,"U"],[280,""],[298,"T"],[304,""],[305,"T"],[306,""],[314,"T"],[317,"U"],[320,""],[360,"T"],[361,"U,T"],[364,"U"],[367,""],[405,"T"],[409,""],[417,"T"],[419,""],[429,"T"],[431,""],[439,"T"],[441,""],[449,"U"],[451,"IntoIterator::IntoIter"],[453,""],[477,"U,T"],[479,"U"],[481,""],[496,"T"],[498,""],[500,"T"],[501,"U"],[502,""],[511,"U,T"],[512,""],[513,"TryFromPrimitive::Primitive"],[514,"U"],[515,""],[519,"T"],[521,""],[523,"T"],[524,""],[525,"U"],[526,""],[531,"U,T"],[532,"U"],[533,""],[543,"T"],[547,""],[553,"T"],[555,""],[560,"U"],[562,""],[580,"U,T"],[582,"U"],[584,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[15093]}